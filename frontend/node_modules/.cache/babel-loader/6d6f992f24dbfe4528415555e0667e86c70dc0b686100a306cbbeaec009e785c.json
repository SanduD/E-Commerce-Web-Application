{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DRAGOS\\\\Desktop\\\\E-Commerce\\\\frontend\\\\src\\\\screens\\\\ShippingScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { saveShippingAddress } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShippingScreen = () => {\n  _s();\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log('Submit');\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Finalizare comanda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"address\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Adresa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Introduceti adresa\",\n          value: address,\n          required: true,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"city\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Oras\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Introduceti orasul\",\n          value: city,\n          required: true,\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"postalCode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Cod Postal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Introduceti codul postal\",\n          value: postalCode,\n          required: true,\n          onChange: e => setPostalCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"country\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Judet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Introduceti judetul\",\n          value: country,\n          required: true,\n          onChange: e => setCountry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continua\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ShippingScreen, \"KT4bLSLmYyT6syAtNpfI2FVSRoE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = ShippingScreen;\nexport default ShippingScreen;\nvar _c;\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","Form","Button","useDispatch","useSelector","FormContainer","saveShippingAddress","jsxDEV","_jsxDEV","ShippingScreen","_s","cart","state","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","placeholder","value","required","onChange","target","variant","_c","$RefreshReg$"],"sources":["C:/Users/DRAGOS/Desktop/E-Commerce/frontend/src/screens/ShippingScreen.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport {useLocation, useNavigate} from 'react-router-dom'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {saveShippingAddress} from '../actions/cartActions'\r\n\r\nconst ShippingScreen = () => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const {shippingAddress} = cart\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    console.log('Submit')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Finalizare comanda</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Adresa</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Introduceti adresa'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>Oras</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Introduceti orasul'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Cod Postal</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Introduceti codul postal'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Judet</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Introduceti judetul'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Continua\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}