{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport { productListReducer, productDetailsReducer, productTopRatedReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer } from './reducers/userReducers';\nimport { orderCreateReducer } from './reducers/orderReducers';\nconst rootReducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  orderCreate: orderCreateReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(thunk),\n  devTools: process.env.NODE_ENV !== 'production',\n  preloadedState: initialState\n});\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","thunk","productListReducer","productDetailsReducer","productTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","orderCreateReducer","rootReducer","productList","productDetails","productTopRated","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","orderCreate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","store","reducer","middleware","getDefaultMiddleware","concat","devTools","process","env","NODE_ENV","preloadedState"],"sources":["C:/Users/DRAGOS/Desktop/E-Commerce/frontend/src/store.js"],"sourcesContent":["import {configureStore} from '@reduxjs/toolkit'\r\nimport {combineReducers} from '@reduxjs/toolkit'\r\nimport thunk from 'redux-thunk'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {orderCreateReducer} from './reducers/orderReducers'\r\n\r\nconst rootReducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  orderCreate: orderCreateReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: {userInfo: userInfoFromStorage},\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(thunk),\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  preloadedState: initialState,\r\n})\r\n\r\nexport default store\r\n"],"mappings":"AAAA,SAAQA,cAAc,QAAO,kBAAkB;AAC/C,SAAQC,eAAe,QAAO,kBAAkB;AAChD,OAAOC,KAAK,MAAM,aAAa;AAC/B,SACEC,kBAAkB,EAClBC,qBAAqB,EACrBC,sBAAsB,QACjB,4BAA4B;AACnC,SAAQC,WAAW,QAAO,yBAAyB;AACnD,SACEC,gBAAgB,EAChBC,mBAAmB,EACnBC,kBAAkB,EAClBC,wBAAwB,EACxBC,eAAe,QACV,yBAAyB;AAEhC,SAAQC,kBAAkB,QAAO,0BAA0B;AAE3D,MAAMC,WAAW,GAAGZ,eAAe,CAAC;EAClCa,WAAW,EAAEX,kBAAkB;EAC/BY,cAAc,EAAEX,qBAAqB;EACrCY,eAAe,EAAEX,sBAAsB;EACvCY,IAAI,EAAEX,WAAW;EACjBY,SAAS,EAAEX,gBAAgB;EAC3BY,YAAY,EAAEX,mBAAmB;EACjCY,WAAW,EAAEX,kBAAkB;EAC/BY,iBAAiB,EAAEX,wBAAwB;EAC3CY,QAAQ,EAAEX,eAAe;EACzBY,WAAW,EAAEX;AACf,CAAC,CAAC;AAEF,MAAMY,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;AAEN,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAER,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACtEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GACnD,CAAC,CAAC;AAEN,MAAMK,YAAY,GAAG;EACnBd,IAAI,EAAE;IACJe,SAAS,EAAER,oBAAoB;IAC/BS,eAAe,EAAEH;EACnB,CAAC;EACDZ,SAAS,EAAE;IAACgB,QAAQ,EAAEL;EAAmB;AAC3C,CAAC;AAED,MAAMM,KAAK,GAAGnC,cAAc,CAAC;EAC3BoC,OAAO,EAAEvB,WAAW;EACpBwB,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,EAAE,CAACC,MAAM,CAACrC,KAAK,CAAC;EAC1EsC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;EAC/CC,cAAc,EAAEb;AAClB,CAAC,CAAC;AAEF,eAAeI,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}