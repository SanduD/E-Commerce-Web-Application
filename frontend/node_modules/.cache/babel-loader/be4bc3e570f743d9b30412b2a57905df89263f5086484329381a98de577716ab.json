{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nconst rootReducer = combineReducers({\n  productList: productListReducer\n});\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(thunk),\n  devTools: process.env.NODE_ENV !== 'production'\n});\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","thunk","productListReducer","productDetailsReducer","rootReducer","productList","store","reducer","middleware","getDefaultMiddleware","concat","devTools","process","env","NODE_ENV"],"sources":["C:/Users/DRAGOS/Desktop/E-Commerce/frontend/src/store.js"],"sourcesContent":["import {configureStore} from '@reduxjs/toolkit'\r\nimport {combineReducers} from '@reduxjs/toolkit'\r\nimport thunk from 'redux-thunk'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n} from './reducers/productReducers'\r\n\r\nconst rootReducer = combineReducers({\r\n  productList: productListReducer,\r\n})\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(thunk),\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n})\r\n\r\nexport default store\r\n"],"mappings":"AAAA,SAAQA,cAAc,QAAO,kBAAkB;AAC/C,SAAQC,eAAe,QAAO,kBAAkB;AAChD,OAAOC,KAAK,MAAM,aAAa;AAC/B,SACEC,kBAAkB,EAClBC,qBAAqB,QAChB,4BAA4B;AAEnC,MAAMC,WAAW,GAAGJ,eAAe,CAAC;EAClCK,WAAW,EAAEH;AACf,CAAC,CAAC;AAEF,MAAMI,KAAK,GAAGP,cAAc,CAAC;EAC3BQ,OAAO,EAAEH,WAAW;EACpBI,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,EAAE,CAACC,MAAM,CAACT,KAAK,CAAC;EAC1EU,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACrC,CAAC,CAAC;AAEF,eAAeR,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}