{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer } from './reducers/userReducers';\nconst rootReducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(thunk),\n  devTools: process.env.NODE_ENV !== 'production',\n  preloadedState: initialState\n});\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","thunk","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","rootReducer","productList","productDetails","cart","userLogin","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","store","reducer","middleware","getDefaultMiddleware","concat","devTools","process","env","NODE_ENV","preloadedState"],"sources":["C:/Users/DRAGOS/Desktop/E-Commerce/frontend/src/store.js"],"sourcesContent":["import {configureStore} from '@reduxjs/toolkit'\r\nimport {combineReducers} from '@reduxjs/toolkit'\r\nimport thunk from 'redux-thunk'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n} from './reducers/productReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport {userLoginReducer} from './reducers/userReducers'\r\n\r\nconst rootReducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst initialState = {\r\n  cart: {cartItems: cartItemsFromStorage},\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(thunk),\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  preloadedState: initialState,\r\n})\r\n\r\nexport default store\r\n"],"mappings":"AAAA,SAAQA,cAAc,QAAO,kBAAkB;AAC/C,SAAQC,eAAe,QAAO,kBAAkB;AAChD,OAAOC,KAAK,MAAM,aAAa;AAC/B,SACEC,kBAAkB,EAClBC,qBAAqB,QAChB,4BAA4B;AACnC,SAAQC,WAAW,QAAO,yBAAyB;AACnD,SAAQC,gBAAgB,QAAO,yBAAyB;AAExD,MAAMC,WAAW,GAAGN,eAAe,CAAC;EAClCO,WAAW,EAAEL,kBAAkB;EAC/BM,cAAc,EAAEL,qBAAqB;EACrCM,IAAI,EAAEL,WAAW;EACjBM,SAAS,EAAEL;AACb,CAAC,CAAC;AAEF,MAAMM,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;AAEN,MAAMG,YAAY,GAAG;EACnBP,IAAI,EAAE;IAACQ,SAAS,EAAEN;EAAoB;AACxC,CAAC;AAED,MAAMO,KAAK,GAAGnB,cAAc,CAAC;EAC3BoB,OAAO,EAAEb,WAAW;EACpBc,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,EAAE,CAACC,MAAM,CAACrB,KAAK,CAAC;EAC1EsB,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;EAC/CC,cAAc,EAAEX;AAClB,CAAC,CAAC;AAEF,eAAeE,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}